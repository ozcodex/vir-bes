#include <U8x8lib.h>
#include <U8g2lib.h>

const uint8_t CLOCK_PIN = 13,
              DATA_PIN = 11,
              CS_PIN = 10,
              DC_PIN = 9,
              RESET_PIN = 8;

U8G2_PCD8544_84X48_1_4W_HW_SPI u8g2 = 
  U8G2_PCD8544_84X48_1_4W_HW_SPI(U8G2_R0, CS_PIN, DC_PIN, RESET_PIN);

static unsigned char bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
   0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x40,
   0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x40, 0x00,
   0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x40, 0x00, 0x00,
   0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x11, 0x80, 0x00, 0x00, 0x00,
   0x04, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x80, 0x00, 0x00, 0x00, 0x04,
   0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x01, 0x00, 0x1e, 0x04, 0x07,
   0x00, 0x00, 0x00, 0x88, 0x00, 0x1c, 0x01, 0x10, 0x30, 0x04, 0x04, 0x00,
   0x00, 0x00, 0x88, 0x10, 0x02, 0x1a, 0x10, 0x20, 0x04, 0x0c, 0x00, 0x00,
   0x00, 0x90, 0x90, 0x02, 0x06, 0x10, 0x3c, 0x84, 0x0b, 0x00, 0x00, 0x00,
   0x90, 0x10, 0x03, 0x02, 0x22, 0x22, 0x84, 0x08, 0x00, 0x00, 0x00, 0x50,
   0x10, 0xc2, 0x05, 0x22, 0x22, 0x84, 0x08, 0x00, 0x00, 0x00, 0x60, 0x10,
   0x02, 0x04, 0x22, 0x22, 0x84, 0x0c, 0x00, 0x00, 0x00, 0x60, 0x10, 0x04,
   0x04, 0x22, 0x22, 0x84, 0x17, 0x00, 0x00, 0x00, 0x40, 0x10, 0x04, 0x08,
   0x12, 0x7e, 0x08, 0x30, 0x00, 0x00, 0x00, 0x40, 0x10, 0x0c, 0x08, 0x14,
   0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x0c, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x20,
   0x08, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x08, 0x20, 0x10,
   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x10, 0x20, 0x10, 0x00,
   0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x10, 0x20, 0x11, 0x00, 0x00,
   0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x20, 0xe0, 0x10, 0x00, 0x9c, 0x0f,
   0x00, 0x00, 0x00, 0x11, 0x60, 0x23, 0x38, 0x30, 0x60, 0x04, 0x01, 0x00,
   0x00, 0x00, 0x91, 0x81, 0x25, 0x20, 0xe0, 0x91, 0x38, 0xc1, 0x00, 0x00,
   0x00, 0x51, 0x82, 0x20, 0x26, 0x20, 0x93, 0x60, 0xa3, 0x01, 0x00, 0x20,
   0x49, 0x04, 0x21, 0x29, 0x20, 0x56, 0x40, 0x22, 0x02, 0x00, 0xc0, 0x47,
   0x0c, 0x21, 0x29, 0x20, 0x34, 0x80, 0xc2, 0x04, 0x00, 0x00, 0xc1, 0x08,
   0x21, 0x29, 0x20, 0xc6, 0x93, 0x82, 0x03, 0x00, 0x00, 0x80, 0x07, 0x21,
   0x26, 0x40, 0x02, 0x88, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xa0,
   0xc0, 0x03, 0x78, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

static unsigned char home_bits[] = {
   0x30, 0x00, 0x48, 0x00, 0x84, 0x00, 0x02, 0x01, 0xff, 0x03, 0x84, 0x00,
   0x84, 0x00, 0x84, 0x00, 0x84, 0x00, 0xfc, 0x00 };

static unsigned char food_bits[] = {
   0x00, 0x00, 0x4e, 0x01, 0x4e, 0x01, 0xce, 0x01, 0x84, 0x00, 0x84, 0x00,
   0x84, 0x00, 0x84, 0x00, 0x84, 0x00, 0x00, 0x00 };

static unsigned char play_bits[] = {
   0x00, 0x00, 0x1c, 0x00, 0x22, 0x00, 0x22, 0x00, 0x22, 0x00, 0x14, 0x00,
   0x08, 0x00, 0x08, 0x01, 0x90, 0x00, 0x60, 0x00 };

int mode = 0;

void setup() {

  pinMode(5, INPUT_PULLUP);
  pinMode(6, INPUT_PULLUP);
  pinMode(7, INPUT_PULLUP);
  u8g2.begin();
  u8g2.setContrast(135);
}

void loop() {
  // put your main code here, to run repeatedly:
  u8g2.firstPage();
  do { draw(); } while ( u8g2.nextPage() );
  if( mode == 0){
    if (digitalRead(6) == LOW){
        mode = 1;
      }
    }
  delay(100);
}

void draw() {
  switch (mode){
  case 0:
    //first screen
    u8g2.drawXBM( 0, 0, 84, 48, bits);
    break;
  case 1:
    //main menu
    u8g2.setFont(u8g2_font_ncenB14_tr);
    u8g2.drawStr(0,15,"Hello");
    u8g2.drawStr(0,35,"World!");
    break;
  }
}
