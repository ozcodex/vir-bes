#include <U8g2lib.h>

const uint8_t CLOCK_PIN = 13,
              DATA_PIN = 11,
              CS_PIN = 10,
              DC_PIN = 9,
              RESET_PIN = 8;

U8G2_PCD8544_84X48_1_4W_HW_SPI u8g2 = 
  U8G2_PCD8544_84X48_1_4W_HW_SPI(U8G2_R0, CS_PIN, DC_PIN, RESET_PIN);

const static unsigned char bits[] = {
   0x00, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x20, 0x00,
   0x04, 0x00, 0x00, 0x40, 0x00, 0x00, 0x20, 0x20, 0x00, 0x04, 0x00, 0x00,
   0x40, 0x00, 0x00, 0x20, 0x10, 0x00, 0x04, 0x00, 0x00, 0x40, 0x00, 0x00,
   0x20, 0x10, 0x01, 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x10, 0x00,
   0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x08, 0x00, 0x10, 0x00, 0xe0,
   0x41, 0x70, 0x00, 0x80, 0x08, 0xc0, 0x11, 0x00, 0x01, 0x43, 0x40, 0x00,
   0x80, 0x08, 0x21, 0xa0, 0x01, 0x01, 0x42, 0xc0, 0x00, 0x00, 0x09, 0x29,
   0x60, 0x00, 0xc1, 0x43, 0xb8, 0x00, 0x00, 0x09, 0x31, 0x20, 0x20, 0x22,
   0x42, 0x88, 0x00, 0x00, 0x05, 0x21, 0x5c, 0x20, 0x22, 0x42, 0x88, 0x00,
   0x00, 0x06, 0x21, 0x40, 0x20, 0x22, 0x42, 0xc8, 0x00, 0x00, 0x06, 0x41,
   0x40, 0x20, 0x22, 0x42, 0x78, 0x01, 0x00, 0x04, 0x41, 0x80, 0x20, 0xe1,
   0x87, 0x00, 0x03, 0x00, 0x04, 0x41, 0x80, 0x40, 0x01, 0x0c, 0x00, 0x00,
   0x00, 0x00, 0x02, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
   0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x88, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x88, 0x00, 0x00, 0x00, 0x41, 0x00,
   0x00, 0x08, 0x00, 0x88, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x08, 0x00,
   0x88, 0x00, 0x80, 0x00, 0x81, 0x00, 0x00, 0x08, 0x00, 0x88, 0x00, 0x80,
   0x00, 0x89, 0x00, 0x00, 0x08, 0x00, 0x88, 0x00, 0x00, 0x01, 0x87, 0x00,
   0xe0, 0x7c, 0x00, 0x88, 0x00, 0x1b, 0xc1, 0x81, 0x01, 0x23, 0x08, 0x00,
   0x88, 0x0c, 0x2c, 0x01, 0x01, 0x8f, 0xc4, 0x09, 0x06, 0x88, 0x12, 0x04,
   0x31, 0x01, 0x99, 0x04, 0x1b, 0x0d, 0x49, 0x22, 0x08, 0x49, 0x01, 0xb1,
   0x02, 0x12, 0x11, 0x3e, 0x62, 0x08, 0x49, 0x01, 0xa1, 0x01, 0x14, 0x26,
   0x08, 0x46, 0x08, 0x49, 0x01, 0x31, 0x9e, 0x14, 0x1c, 0x00, 0x3c, 0x08,
   0x31, 0x01, 0x12, 0x40, 0x34, 0x00, 0x00, 0x00, 0x80, 0x01, 0x05, 0x1e,
   0xc0, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00
   };

static unsigned char menu[][100] = {
  {0x30, 0x00, 0x48, 0x00, 0x84, 0x00, 0x02, 0x01, 0xff, 0x03, 0x84, 0x00,
   0x84, 0x00, 0x84, 0x00, 0xfc, 0x00, 0x00, 0x00 },
  {0x00, 0x00, 0x78, 0x00, 0x84, 0x00, 0x32, 0x01, 0x02, 0x01, 0x32, 0x01,
   0x32, 0x01, 0xb4, 0x00, 0x78, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x4e, 0x01, 0x4e, 0x01, 0xce, 0x01, 0x84, 0x00, 0x84, 0x00,
   0x84, 0x00, 0x84, 0x00, 0x84, 0x00, 0x00, 0x00 },
  {0x00, 0x00, 0x1c, 0x00, 0x22, 0x00, 0x22, 0x00, 0x22, 0x00, 0x14, 0x00,
   0x88, 0x00, 0x48, 0x00, 0x30, 0x00, 0x00, 0x00 },
  {0x00, 0x00, 0xe0, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xfe, 0x01,
   0x04, 0x01, 0x08, 0x01, 0xf0, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0xe0, 0x01, 0x80, 0x00, 0x40, 0x00, 0xe0, 0x01, 0x1e, 0x00,
   0x08, 0x00, 0x04, 0x00, 0x1e, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x40, 0x00, 0x20, 0x00, 0x10, 0x00,
   0x08, 0x00, 0x3e, 0x00, 0x2a, 0x00, 0x00, 0x00},
  {0xdc, 0x00, 0x22, 0x01, 0x11, 0x02, 0x21, 0x02, 0x11, 0x02, 0x21, 0x02,
   0x11, 0x02, 0x79, 0x02, 0x87, 0x03, 0x00, 0x00}//,
  //{0x48, 0x00, 0xfc, 0x00, 0x02, 0x01, 0x32, 0x01, 0x7a, 0x01, 0x7a, 0x01,
  // 0x32, 0x01, 0x02, 0x01, 0xfc, 0x00, 0x00, 0x00}//,
  //{0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x86, 0x01, 0x4a, 0x01, 0x32, 0x01,
  // 0x02, 0x01, 0x02, 0x01, 0xfe, 0x01, 0x00, 0x00}
};

static char menu_names[][20] = {
  "cxefa","stato","mangxo","ludo","dusxu","dormu","purigu","lernu"//,"medic"//,"mail"
  };

int menu_len = 8;

unsigned char selected_bits[100];
int mode = 0;
int selected = 0;

void setup() {

  pinMode(5, INPUT_PULLUP);
  pinMode(6, INPUT_PULLUP);
  pinMode(7, INPUT_PULLUP);
  u8g2.begin();
  u8g2.setContrast(135);
}

void loop() {
  // put your main code here, to run repeatedly:
  u8g2.firstPage();
  do { draw(); } while ( u8g2.nextPage() );

    if (digitalRead(5) == LOW){
        if( mode == 0) mode = 1; else{
        selected--;
        if (selected < 0 ) selected = 0; }
      }
    if (digitalRead(6) == LOW){
        if( mode == 0) mode = 1;
      }
    if (digitalRead(7) == LOW){
        if( mode == 0) mode = 1; else{
        selected++;
        if (selected >= menu_len ) selected = menu_len - 1; }
      }
  delay(150);
}

void draw() {
  switch (mode){
  case 0:
    //first screen
    u8g2.drawXBM( 5, 7, 70, 36, bits);
    break;
  case 1:
    //main menu
    draw_menu();
    break;
  }
}

void draw_menu(){
  u8g2.drawLine(0, 10, 84, 10);
  build_selected();
  for(int i = 0;i<menu_len;i++){
    u8g2.drawXBM( i*10, 0, 10, 10, selected == i? selected_bits:menu[i]);
  }
  u8g2.setFont(u8g2_font_5x7_tr);
  u8g2.setFontPosTop();
  u8g2.drawStr(0,40,menu_names[selected]);
}

void build_selected(){
  for(int i=0;i<100;i++){
    selected_bits[i] = ~menu[selected][i];
    }
  }
